global
  daemon
  maxconn {{key "haproxy/maxconn"}}
  lua-load /etc/haproxy/acme-http01-webroot.lua

defaults
  mode {{key "haproxy/mode"}}{{range ls "haproxy/timeouts"}}
  timeout {{.Key}} {{.Value}}{{end}}
  option http-server-close

frontend http-in
  mode http
  bind *:80
  
  acl url_acme_http01 path_beg /.well-known/acme-challenge/
  http-request use-service lua.acme-http01 if METH_GET url_acme_http01{{range services}}{{$service:=.Name}}{{range .Tags}}{{if eq . "http"}}{{range service $service}}

  acl is_{{.Name}} hdr_end(host) -i {{range ls .Name}}{{if eq .Key "cnames"}}{{.Value}} {{end}}{{end}}
  use_backend {{.Name}} if is_{{.Name}}{{end}}{{end}}{{end}}{{end}}

frontend https-in
  mode tcp
  option tcplog
  option socket-stats

  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }

  reqadd X-Forwarded-Proto:\ https
  bind *:443{{range services}}{{$service:=.Name}}{{range .Tags}}{{if eq . "https"}}{{range service $service}}
  acl is_{{.Name}} req_ssl_sni -i {{range ls .Name}}{{if eq .Key "cnames"}}{{.Value}} {{end}}{{end}}
  use_backend {{.Name}} if is_{{.Name}}{{end}}{{end}}{{end}}{{end}}

{{range services}}{{$service:=.Name}}{{range .Tags}}{{if eq . "http"}}{{range service $service}}backend {{.Name}}
  mode http
  option httpclose
  option forwardfor
  {{range service .Name "passing"}}server {{.Node}} {{.Address}}:{{.Port}}
  {{end}}
{{end}}{{end}}{{end}}{{end}}{{range services}}{{$service:=.Name}}{{range .Tags}}{{if eq . "https"}}{{range service $service}}backend {{.Name}}
  mode tcp
  option httpclose
  option ssl-hello-chk
  option forwardfor
  {{range service .Name "passing"}}server {{.Node}} {{.Address}}:{{.Port}}
  {{end}}
{{end}}{{end}}{{end}}{{end}}
